apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: otel-demo-server
  name: otel-demo-server
  namespace: otel-demo
spec:
  ports:
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: otel-demo-server
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: otel-demo-worker
  name: otel-demo-worker
  namespace: otel-demo
spec:
  ports:
  - name: http
    port: 8081
    protocol: TCP
    targetPort: 8081
  selector:
    app.kubernetes.io/name: otel-demo-worker
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-client
  namespace: otel-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: otel-demo-client
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: otel-demo-client
        app.kubernetes.io/name: otel-demo-client
    spec:
      containers:
      - args:
        - client
        - -s
        - http://otel-demo-server:8080
        - -i
        - "5"
        env:
        - name: OTEL_K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: OTEL_K8S_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: OTEL_SERVICE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['app.kubernetes.io/name']
        - name: OTEL_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: service.name=$(OTEL_SERVICE_NAME),namespace=$(OTEL_K8S_NAMESPACE),node=$(OTEL_K8S_NODE_NAME),pod=$(OTEL_K8S_POD_NAME)
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://opentelemetry-collector.observability:4318
        - name: OTEL_EXPORTER_OTLP_INSECURE
          value: "true"
        image: registry.cn-beijing.aliyuncs.com/kubegems/otel-demo:v0.2.0
        imagePullPolicy: Always
        name: otel-demo-client
        resources: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-server
  namespace: otel-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: otel-demo-server
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: otel-demo-server
        app.kubernetes.io/name: otel-demo-server
    spec:
      containers:
      - args:
        - server
        - -w
        - http://otel-demo-worker:8081
        - --mysql-addr=kubegems-mysql.kubegems:3306
        - --mysql-root-password=X69KdO15T8
        - --mysql-db-name=kubegems
        env:
        - name: OTEL_K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: OTEL_K8S_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: OTEL_SERVICE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['app.kubernetes.io/name']
        - name: OTEL_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: service.name=$(OTEL_SERVICE_NAME),namespace=$(OTEL_K8S_NAMESPACE),node=$(OTEL_K8S_NODE_NAME),pod=$(OTEL_K8S_POD_NAME)
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://opentelemetry-collector.observability:4318
        - name: OTEL_EXPORTER_OTLP_INSECURE
          value: "true"
        image: registry.cn-beijing.aliyuncs.com/kubegems/otel-demo:v0.2.0
        imagePullPolicy: Always
        name: otel-demo-server
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-demo-worker
  namespace: otel-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: otel-demo-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: otel-demo-worker
        app.kubernetes.io/name: otel-demo-worker
    spec:
      containers:
      - args:
        - worker
        env:
        - name: OTEL_K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: OTEL_K8S_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: OTEL_SERVICE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['app.kubernetes.io/name']
        - name: OTEL_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: service.name=$(OTEL_SERVICE_NAME),namespace=$(OTEL_K8S_NAMESPACE),node=$(OTEL_K8S_NODE_NAME),pod=$(OTEL_K8S_POD_NAME)
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://opentelemetry-collector.observability:4318
        - name: OTEL_EXPORTER_OTLP_INSECURE
          value: "true"
        image: registry.cn-beijing.aliyuncs.com/kubegems/otel-demo:v0.2.0
        imagePullPolicy: Always
        name: otel-demo-worker
        ports:
        - containerPort: 8081
          name: http
          protocol: TCP
        resources: {}
